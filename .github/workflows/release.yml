name: Release

on:
  release:
    types: [published]
  workflow_dispatch:

defaults:
  run:
    shell: bash -l {0}  # required for conda env

jobs:
  check_release:
    name: Check if package can be released
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v3
        with:
          python-version: 3.8
      - run: python -m pip install --upgrade pip
      - run: python -m pip install -r requirements/ci.txt
      # - run: tox -e check-release
        if: github.event_name == 'release' && github.event.action == 'published'

  build_wheels:
    name: Wheels on ${{ matrix.os }}-${{ matrix.build }}
    needs: check_release
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04]
        build: [cp39]

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
        fetch-depth: 0  # history required so cmake can determine version

    - name: Build wheels
      run: pip wheel -w DEST_DIR .
      shell: bash

    - name: Verify clean directory
      run: git diff --exit-code
      shell: bash

    - name: Upload wheels
      uses: actions/upload-artifact@v2
      with:
        name: dist
        path: wheelhouse/*.whl

  upload_pypi:
    name: Deploy PyPI
    needs: [build_wheels]
    runs-on: ubuntu-20.04
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
      - uses: actions/download-artifact@v2
      - uses: actions/setup-python@v3
      - uses: pypa/gh-action-pypi-publish@v1.7.1
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
